% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrap-summarize.R
\name{bootstrap_summarize}
\alias{bootstrap_summarize}
\alias{bootstrap_summarise}
\alias{bootstrap_do}
\alias{bootstrap_collect}
\alias{bootstrap}
\title{Bootstrapped actions on data frames}
\usage{
bootstrap_summarize(.data, times, ..., key = ".draw")

bootstrap_summarise(.data, times, ..., key = ".draw")

bootstrap_do(.data, times, ..., key = ".draw")

bootstrap_collect(.data, times, ..., key = ".draw")
}
\arguments{
\item{.data}{Data frame on which to operate.}

\item{times}{Number of independent bootstrap draws to perform.}

\item{...}{Other arguments handed off to \code{\link[=summarize]{summarize()}}, \code{\link[=do]{do()}},
or \code{\link[=collect]{collect()}}.}

\item{key}{Name of the column that will hold an integer
running from 1 to \code{times} indicating the bootstrap replicate.}
}
\description{
Perform bootstrapped actions on data frames (tibbles) respecting any
grouping that has been set up. The function \code{bootstrap_summarize()} is
a drop-in replacement for \code{\link[dplyr:summarize]{dplyr::summarize()}} and the function
\code{bootstrap_do()} is a drop-in replacement for \code{\link[dplyr:do]{dplyr::do()}}. The
function \code{bootstrap()} simply generates bootstrapped data sets and
returns them in a combined table.
}
\examples{
iris \%>\% group_by(Species) \%>\%
  bootstrap_summarize(3, mean_sepal_length = mean(Sepal.Length))

data(BlueJays, package = "Stat2Data")
BlueJays \%>\% group_by(KnownSex) \%>\%
  bootstrap_do(
    5,
    broom::tidy(lm(BillLength ~ Head, data = .))
  )
library(ggplot2)
library(dplyr)

mtcars \%>\% bootstrap_collect(20) \%>\%
  ggplot(aes(hp, mpg)) +
  geom_point(data = mtcars) +
  geom_smooth(aes(group = .draw), method = "lm", se = FALSE)

\dontrun{
library(gganimate)
mtcars \%>\% bootstrap_collect(20) \%>\%
  ggplot(aes(hp, mpg)) +
  geom_point(data = mtcars) +
  geom_smooth(aes(group = .draw), method = "lm", se = FALSE) +
  transition_states(.draw, 1, 1) +
  shadow_mark(color = "gray60", size = 0.3)
}
}
